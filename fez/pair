const {
  zokou
} = require("");
const {
  default: axios
} = require("axios");
zokou({
  'nomCom': "pair",
  'aliases': ["session", "pair", "paircode", "qrcode"],
  'reaction': 'üõ∏',
  'categorie': "General"
}, async (_0x2ce843, _0x1c44fd, _0x32de8a) => {
  const {
    repondre: _0x2e61d5,
    arg: _0x8621a4
  } = _0x32de8a;
  try {
    if (!_0x8621a4 || _0x8621a4.length === 0) {
      return _0x2e61d5("Example Usage: .code 255784766591x.");
    }
    await _0x2e61d5("·¥°·¥Ä…™·¥õ *mateless* …™s …¢·¥á…¥·¥á Ä·¥Ä·¥õ…™…¥…¢  è·¥è·¥ú Ä ·¥ò·¥Ä…™ Ä ·¥Ñ·¥è·¥Ö·¥á...");
    const _0x386b0a = encodeURIComponent(_0x8621a4.join(" "));
    const _0x1ea92d = "https://timnasa-md42.onrender.com/" + _0x386b0a;
    const _0xb59e41 = await axios.get(_0x1ea92d);
    const _0x1b71f0 = _0xb59e41.data;
    if (_0x1b71f0 && _0x1b71f0.code) {
      const _0x40751a = _0x1b71f0.code;
      await _0x2e61d5('' + _0x40751a);
      await _0x2e61d5(" ú·¥á Ä·¥á …™s  è·¥è·¥ú Ä ·¥ò·¥Ä…™ Ä ·¥Ñ·¥è·¥Ö·¥á, ·¥Ñ·¥è·¥ò è ·¥Ä…¥·¥Ö ·¥ò·¥Äs·¥õ·¥á …™·¥õ ·¥õ·¥è ·¥õ ú·¥á …¥·¥è·¥õ…™“ì…™·¥Ñ·¥Ä·¥õ…™·¥è…¥ ·¥Ä ô·¥è·¥†·¥á ·¥è Ä  ü…™…¥·¥ã ·¥Ö·¥á·¥†…™·¥Ñ·¥ás.");
    } else {
      throw new Error("Invalid response from API.");
    }
  } catch (_0x21fdc6) {
    console.error("Error getting API response:", _0x21fdc6.message);
    _0x2e61d5("Error getting response from API.");
  }
})
